version: 2.1
general:
    branches:
      only:
        - staging
        - master
        - ci
jobs:
  build-server:
    description: "[Server] Build .net application"
    docker: 
      - image : mcr.microsoft.com/dotnet/core/sdk:3.1
    steps:
      - checkout
      - run:
          name: Install docker
          command: |
            apt-get update --fix-missing
            apt-get install -y apt-transport-https ca-certificates software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
            apt-key fingerprint 0EBFCD88
            add-apt-repository \
              "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) \
              stable"
            apt-get update
            apt-get install -y docker-ce
            docker --version
      - run:
          name: "[Server] Restore packages"
          command: dotnet restore
      - run:
          name: "[Server] Build .net core"
          command: dotnet build
      - run:
          name: "[Server] Publish Web"
          working_directory : "avianoise.Web"
          command: dotnet publish -c Release -o .build/out
      - run: 
         name: "Create avianoise.Web docker image"
         working_directory: "avianoise.Web"
         command: docker build -t chernikov/avianoise_web .
      - run: 
         name: "Login to hub.docker.com"
         command : echo "$docker_password" | docker login --username $docker_user --password-stdin
      - run: 
         name: "Push image"
         command : docker push chernikov/avianoise_web

  build-client:
    description: "[Client] Build client application"
    docker: 
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "avianoise.Client/package-lock.json" }}
            - dependencies-
      - run:
          name: "[Client] Restore packages"
          working_directory: avianoise.Client
          command: yarn install
      - save_cache:
          key: dependencies-{{ checksum "avianoise.Client/package-lock.json" }}
          paths:
            - avianoise.Client/node_modules
      - run:
          name: "[Client] Build angular"
          working_directory: avianoise.Client
          command: yarn ng build --prod --output-path app --deploy-url /app/ --build-optimizer --vendor-chunk=true
workflows:
  build:
    jobs:
      - build-server          
     # - build-client
